// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// PET
NumericVector PET(int model, int hemis, NumericMatrix inputData, NumericVector elev, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_PET(SEXP modelSEXP, SEXP hemisSEXP, SEXP inputDataSEXP, SEXP elevSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< int >::type hemis(hemisSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type elev(elevSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(PET(model, hemis, inputData, elev, param));
    return rcpp_result_gen;
END_RCPP
}
// Glacier_Disch
NumericMatrix Glacier_Disch(int model, NumericMatrix inputData, double initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_Glacier_Disch(SEXP modelSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< double >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(Glacier_Disch(model, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// Precip_model
NumericVector Precip_model(int model, NumericVector inputData, double zmeteo, double ztopo, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_Precip_model(SEXP modelSEXP, SEXP inputDataSEXP, SEXP zmeteoSEXP, SEXP ztopoSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< double >::type zmeteo(zmeteoSEXP);
    Rcpp::traits::input_parameter< double >::type ztopo(ztopoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(Precip_model(model, inputData, zmeteo, ztopo, param));
    return rcpp_result_gen;
END_RCPP
}
// Routing_HBV
NumericMatrix Routing_HBV(int model, bool lake, NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_Routing_HBV(SEXP modelSEXP, SEXP lakeSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< bool >::type lake(lakeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(Routing_HBV(model, lake, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// SnowGlacier_HBV
NumericMatrix SnowGlacier_HBV(int model, NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_SnowGlacier_HBV(SEXP modelSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(SnowGlacier_HBV(model, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// Soil_HBV
NumericVector Soil_HBV(int model, NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_Soil_HBV(SEXP modelSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(Soil_HBV(model, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// Temp_model
NumericVector Temp_model(int model, NumericVector inputData, double zmeteo, double ztopo, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_Temp_model(SEXP modelSEXP, SEXP inputDataSEXP, SEXP zmeteoSEXP, SEXP ztopoSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< double >::type zmeteo(zmeteoSEXP);
    Rcpp::traits::input_parameter< double >::type ztopo(ztopoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(Temp_model(model, inputData, zmeteo, ztopo, param));
    return rcpp_result_gen;
END_RCPP
}
// UH
NumericVector UH(int model, NumericVector Qg, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_UH(SEXP modelSEXP, SEXP QgSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type model(modelSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Qg(QgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(UH(model, Qg, param));
    return rcpp_result_gen;
END_RCPP
}
// icemelt_clean
NumericMatrix icemelt_clean(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_icemelt_clean(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(icemelt_clean(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// icemelt_clean_gca
NumericMatrix icemelt_clean_gca(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_icemelt_clean_gca(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(icemelt_clean_gca(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// icemelt_debris
NumericMatrix icemelt_debris(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_icemelt_debris(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(icemelt_debris(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// icemelt_debris_gca
NumericMatrix icemelt_debris_gca(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_icemelt_debris_gca(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(icemelt_debris_gca(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// route_1r_2o
NumericMatrix route_1r_2o(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_route_1r_2o(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(route_1r_2o(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// route_1r_3o
NumericMatrix route_1r_3o(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_route_1r_3o(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(route_1r_3o(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// route_2r_2o
NumericMatrix route_2r_2o(bool lake, NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_route_2r_2o(SEXP lakeSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type lake(lakeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(route_2r_2o(lake, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// route_2r_3o
NumericMatrix route_2r_3o(bool lake, NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_route_2r_3o(SEXP lakeSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type lake(lakeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(route_2r_3o(lake, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// route_3r_3o
NumericMatrix route_3r_3o(bool lake, NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_route_3r_3o(SEXP lakeSEXP, SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type lake(lakeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(route_3r_3o(lake, inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// snowmelt
NumericMatrix snowmelt(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_snowmelt(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(snowmelt(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// snowmelt_sca
NumericMatrix snowmelt_sca(NumericMatrix inputData, NumericVector initCond, NumericVector param);
RcppExport SEXP _HBV_IANIGLA_snowmelt_sca(SEXP inputDataSEXP, SEXP initCondSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type inputData(inputDataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initCond(initCondSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(snowmelt_sca(inputData, initCond, param));
    return rcpp_result_gen;
END_RCPP
}
// medianCpp
int medianCpp(double x);
RcppExport SEXP _HBV_IANIGLA_medianCpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(medianCpp(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HBV_IANIGLA_PET", (DL_FUNC) &_HBV_IANIGLA_PET, 5},
    {"_HBV_IANIGLA_Glacier_Disch", (DL_FUNC) &_HBV_IANIGLA_Glacier_Disch, 4},
    {"_HBV_IANIGLA_Precip_model", (DL_FUNC) &_HBV_IANIGLA_Precip_model, 5},
    {"_HBV_IANIGLA_Routing_HBV", (DL_FUNC) &_HBV_IANIGLA_Routing_HBV, 5},
    {"_HBV_IANIGLA_SnowGlacier_HBV", (DL_FUNC) &_HBV_IANIGLA_SnowGlacier_HBV, 4},
    {"_HBV_IANIGLA_Soil_HBV", (DL_FUNC) &_HBV_IANIGLA_Soil_HBV, 4},
    {"_HBV_IANIGLA_Temp_model", (DL_FUNC) &_HBV_IANIGLA_Temp_model, 5},
    {"_HBV_IANIGLA_UH", (DL_FUNC) &_HBV_IANIGLA_UH, 3},
    {"_HBV_IANIGLA_icemelt_clean", (DL_FUNC) &_HBV_IANIGLA_icemelt_clean, 3},
    {"_HBV_IANIGLA_icemelt_clean_gca", (DL_FUNC) &_HBV_IANIGLA_icemelt_clean_gca, 3},
    {"_HBV_IANIGLA_icemelt_debris", (DL_FUNC) &_HBV_IANIGLA_icemelt_debris, 3},
    {"_HBV_IANIGLA_icemelt_debris_gca", (DL_FUNC) &_HBV_IANIGLA_icemelt_debris_gca, 3},
    {"_HBV_IANIGLA_route_1r_2o", (DL_FUNC) &_HBV_IANIGLA_route_1r_2o, 3},
    {"_HBV_IANIGLA_route_1r_3o", (DL_FUNC) &_HBV_IANIGLA_route_1r_3o, 3},
    {"_HBV_IANIGLA_route_2r_2o", (DL_FUNC) &_HBV_IANIGLA_route_2r_2o, 4},
    {"_HBV_IANIGLA_route_2r_3o", (DL_FUNC) &_HBV_IANIGLA_route_2r_3o, 4},
    {"_HBV_IANIGLA_route_3r_3o", (DL_FUNC) &_HBV_IANIGLA_route_3r_3o, 4},
    {"_HBV_IANIGLA_snowmelt", (DL_FUNC) &_HBV_IANIGLA_snowmelt, 3},
    {"_HBV_IANIGLA_snowmelt_sca", (DL_FUNC) &_HBV_IANIGLA_snowmelt_sca, 3},
    {"_HBV_IANIGLA_medianCpp", (DL_FUNC) &_HBV_IANIGLA_medianCpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_HBV_IANIGLA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
